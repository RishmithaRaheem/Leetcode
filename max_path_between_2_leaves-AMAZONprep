import sys


# A class to store a binary tree node
class Node:
	def __init__(self, data, left=None, right=None):
		self.data = data
		self.left = left
		self.right = right


# Recursive function to find the maximum sum path between two leaves
# in a binary tree
def findMaxSumPath(root, res):
	if root is None:
		return 0
	
	ls = findMaxSumPath(root.left, res)
	rs = findMaxSumPath(root.right, res)
	
	if root.left is not None and root.right is not None:
		
		res[0] = max(res[0], ls+rs+root.data)
		
		return max(ls,rs)+root.data
		
	
	if root.left is None:
		return root.data+rs
	else:
		return root.data+ls
	


if __name__ == '__main__':

	''' Construct the following tree
		  1
		/   \
	   /     \
	  2       3
	   \     / \
	   -4   5   6
		   / \
		  7   8
	'''

	root = Node(1)
	root.left = Node(2)
	root.right = Node(3)
	root.left.right = Node(-4)
	root.right.left = Node(5)
	root.right.right = Node(6)
	root.right.left.left = Node(7)
	root.right.left.right = Node(8)
	res = [-9999]
	findMaxSumPath(root, res)
	print(res[0])
	
